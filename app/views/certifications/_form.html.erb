<%= form_for(@certification) do |f| %>

  <%= render 'errors' %>

  <% if @certification.employee.present? && @source != 'certification' %>
    <div class="field">
      Employee <%= link_to "#{@certification.employee.first_name} #{@certification.employee.last_name}", @certification.employee %>
      <%= hidden_field(:certification, :employee_id, value: @certification.employee_id) %>
    </div>
  <% else %>
    <div class="field">
      <%= f.label :employee_id, 'Employee' %>
      <br/>
      <%= select(:certification, :employee_id,
                 options_from_collection_for_select(@employees, 'id', 'name',
                                                    @certification.employee_id),
                 {prompt: 'Select Employee...'}) %>
    </div>
  <% end %>

  <% if (user_action == 'Recertify') %>
    <%= render partial: 'show_certification_type', locals: {f: f} %>
  <% else %>
    <%= render partial: 'choose_certification_type', locals: {f: f} %>
  <% end %>

  <div class="field">
    <%= f.label :trainer %>
    <br/>
    <%= f.text_field :trainer %>
  </div>

  <div data-units_achieved="data-units_achieved" class="field">
    <%= f.label :units_achieved, 'Units Achieved' %>
    <br/>
    <%= f.text_field :units_achieved %>
  </div>

  <div class="field">
    <%= f.label :last_certification_date, 'Last Certification Date' %>
    <br/>
    <input class="datepicker"
           id="certification_last_certification_date"
           name="certification[last_certification_date]"
           type="text"
           value="<%= DateHelpers.date_to_string(@certification.last_certification_date) %>">
  </div>

  <div class="field">
    <%= f.label :comments %>
    <br/>
    <%= f.text_field :comments %>
  </div>

  <input type="hidden" name="source" value="<%= @source %>">

  <%= submit_tag(user_action) %>
  <% if user_action == 'Create' %>
    <%= submit_tag "Save and Create Another" %>
  <% end %>

<% end %>

<script type="text/javascript">

  $(function() {
      do_if_units_based(
        function() {
          $('[data-units_achieved]').show();
        },
        function() {
          $('[data-units_achieved]').hide();
        });
    }
  );

  $('[name=commit]').click(function() {
    return confirm_future_date(new Date(document.getElementById('certification_last_certification_date').value));
  });

  $('#certification_certification_type_id').change(function() {
    do_if_units_based(
      function() {
        $('[data-units_achieved]').slideDown();
        $('[data-units_achieved]').show('slide');
        $('#certification_units_achieved').val(0);
      },
      function() {
        $('[data-units_achieved]').hide('explode');
        $('#certification_units_achieved').val(null);
      });

  });

  function do_if_units_based(true_callback, false_callback) {
    $.getJSON('<%= ajax_is_units_based_path %>',
      {certification_type_id: $('#certification_certification_type_id').val()},
      function(data) {
        if (data.is_units_based) {
          true_callback();
        }
        else {
          false_callback();
        }
      }
    );
  }
  ;

</script>